version: "3"

services:

  web:
    image: nginx:1.21.0
    container_name: ${APP_NAME}_web
    hostname: ${APP_NAME}_web
    ports:
      - 80:80
      - 443:443
    environment:
      WEB_DOCUMENT_ROOT: /app/public
      WEB_PHP_SOCKET: ${APP_NAME}_php:9000
      LOG_STDOUT: /app/storage/logs/web.access.log
      LOG_STDERR: /app/storage/logs/web.errors.log
    volumes:
      - ./:/app
      - ./docker/nginx:/etc/nginx/conf.d
      - data:/mnt/ovp_nfs_client/asterisk/monitor/
    working_dir: /app
    depends_on:
      - php

  php:
    build:
      context: ./
      dockerfile: docker/conf/php/Dockerfile
    container_name: ${APP_NAME}_php
    hostname: ${APP_NAME}_php
    working_dir: /app
    volumes:
      - ./:/app/
      - ./storage/framework/tmp:/tmp
      - ./docker/conf/php/.bashrc:/root/.bashrc
      - ./docker/conf/php/.bash_aliases:/root/.bash_aliases
      - data:/mnt/ovp_nfs_client/asterisk/monitor/
      - ./storage/app/public/asterisk/sounds:/mnt/ovp_nfs_client/asterisk/sounds/
    environment:
      TERM: xterm-256color
      COMPOSER_ALLOW_SUPERUSER: 1
      XDEBUG_CONFIG: "client_host=${DOCKER_ADDRESS}"
      PHP_IDE_CONFIG: "serverName=${APP_NAME}"
    ports:
      - 6001:6001
    depends_on:
      - db
      - db_testing
      - cache
    entrypoint: [ "/bin/bash", "/app/docker/bin/php_start.sh" ]

  db:
    image: mysql/mysql-server:8.0.27
    container_name: ${APP_NAME}_db
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./storage/mysql/:/var/lib/mysql/

  db_testing:
    image: mysql/mysql-server:8.0.27
    container_name: ${APP_NAME}_db_testing
    ports:
      - 3307:${DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - ./storage/mysql_testing:/var/lib/mysql

  cache:
    image: nbtri/alpine-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    container_name: ${APP_NAME}_cache
    hostname: ${APP_NAME}_cache
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

volumes:
  data:
